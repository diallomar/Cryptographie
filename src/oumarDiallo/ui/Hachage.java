/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oumarDiallo.ui;

import java.awt.Frame;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import oumarDiallo.crypto.hachage.HachInput;

/**
 *
 * @author diallomar
 */
public class Hachage extends javax.swing.JFrame {

    /**
     * Creates new form Hachage
     */
    private static File fileToHache;
    private static File fileHach;
    private static File cle;
    private static String verif;

    public Hachage() {
        initComponents();
        user.setText(Login.us);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        user = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel4 = new javax.swing.JPanel();
        typeKey = new javax.swing.JComboBox<>();
        hachType = new javax.swing.JComboBox<>();
        hachFonction = new javax.swing.JComboBox<>();
        headerTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        headerIndicator = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        hachSave = new javax.swing.JButton();
        importFile = new javax.swing.JButton();
        fileName = new javax.swing.JLabel();
        pathStoreHach = new javax.swing.JLabel();
        keyName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        importHach = new javax.swing.JButton();
        hashName = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(25, 118, 211));

        jLabel2.setFont(new java.awt.Font("Liberation Mono", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 3, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Bienvenue dans votre application de Cryptographique pour la sécurité de vos données");

        user.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(950, 950, 950)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(44, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(29, Short.MAX_VALUE)))
        );

        jPanel1.setBackground(new java.awt.Color(237, 234, 234));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jButton1.setText("Chiffrement");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(153, 153, 153));
        jButton8.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jButton8.setText("Génératiton de Clé");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(153, 153, 153));
        jButton9.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jButton9.setText("Hachage");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(153, 153, 153));
        jButton10.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jButton10.setText("Signature");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setBackground(new java.awt.Color(153, 153, 153));
        jButton11.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jButton11.setText("Déchiffrement");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(153, 153, 153));
        jButton12.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jButton12.setText("Échange de Clé DH");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(153, 153, 153));
        jLabel10.setFont(new java.awt.Font("Liberation Sans", 3, 18)); // NOI18N
        jLabel10.setText("Accueil");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel3.setText(" Copyright (c) 2003  Irritable Enterprises, Inc.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jTextPane1.setEditable(false);
        jTextPane1.setBackground(new java.awt.Color(237, 234, 234));
        jTextPane1.setBorder(null);
        jTextPane1.setFont(new java.awt.Font("Bitstream Charter", 3, 18)); // NOI18N
        jTextPane1.setText("Le hachage en cryptographie est une fonction qui transforme des données d'entrée de taille variable en une empreinte numérique de taille fixe, rendant difficile la récupération des données originales à partir de cette empreinte, assurant ainsi l'intégrité et l'authenticité des informations.");
        jScrollPane1.setViewportView(jTextPane1);

        jPanel4.setBackground(new java.awt.Color(237, 234, 234));

        typeKey.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        typeKey.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Type de Clé", "AES", "DES" }));
        typeKey.setToolTipText("");
        typeKey.setEnabled(false);
        typeKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeKeyActionPerformed(evt);
            }
        });

        hachType.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        hachType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Type de Hachage", "Message Authentication Code (Mac)", "Message Digest (MD)", "Vérification d'un hash" }));
        hachType.setToolTipText("");
        hachType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hachTypeActionPerformed(evt);
            }
        });

        hachFonction.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        hachFonction.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fonction de Hachage" }));
        hachFonction.setToolTipText("");
        hachFonction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hachFonctionActionPerformed(evt);
            }
        });

        headerTitle.setFont(new java.awt.Font("Liberation Sans", 3, 36)); // NOI18N
        headerTitle.setText("Hachage");

        headerIndicator.setFont(new java.awt.Font("Liberation Sans", 0, 17)); // NOI18N
        headerIndicator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerIndicator.setText("Choisir votre type d'opération ou de hachage");

        hachSave.setFont(new java.awt.Font("Liberation Sans", 3, 17)); // NOI18N
        hachSave.setText("Hacher et Enregistrer");
        hachSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hachSaveActionPerformed(evt);
            }
        });

        importFile.setFont(new java.awt.Font("Liberation Sans", 2, 17)); // NOI18N
        importFile.setText("Importer le Fichier");
        importFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importFileActionPerformed(evt);
            }
        });

        fileName.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N

        keyName.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 3, 17)); // NOI18N
        jLabel4.setText("Mode Live -->");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        importHach.setFont(new java.awt.Font("Liberation Sans", 2, 17)); // NOI18N
        importHach.setText("Importer le Hash");
        importHach.setEnabled(false);
        importHach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importHachActionPerformed(evt);
            }
        });

        hashName.setFont(new java.awt.Font("Liberation Sans", 3, 15)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 286, Short.MAX_VALUE)
                .addComponent(headerTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hachFonction, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hachType, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(153, 153, 153)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(importFile, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(typeKey, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importHach, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(keyName, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hashName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headerIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, 745, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pathStoreHach, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(hachSave, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(headerTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(headerIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeKey, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hachType, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(keyName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(importHach, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addGap(5, 5, 5)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(hachFonction, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(importFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(fileName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hachSave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathStoreHach, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(hashName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1110, 705));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
        Chiffrement chiffrement = new Chiffrement();
        chiffrement.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        dispose();
        GenKey genKey = new GenKey();
        genKey.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        dispose();
        Signature signature = new Signature();
        signature.setVisible(true);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        dispose();
        Dechiffrement dechiffrement = new Dechiffrement();
        dechiffrement.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void typeKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeKeyActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("importer la clé");

        int returnValue = fileChooser.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            cle = fileChooser.getSelectedFile();
            // Vous pouvez maintenant utiliser le "selectedFile" pour traiter le fichier importé, par exemple le lire ou le manipuler.
            keyName.setText(cle.getName());
            // Vous pouvez également afficher le chemin du fichier dans un JTextField ou JLabel si vous le souhaitez.
        }
    }//GEN-LAST:event_typeKeyActionPerformed

    private void hachTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hachTypeActionPerformed
        // TODO add your handling code here:
        String[] macAlgoDigest = {"Fonction de Hachage", "HmacMD5", "HmacSHA1", "HmacSHA256", "HmacSHA512"};
        String[] mdAlgoDigest = {"Fonction de Hachage", "MD5", "SHA1", "SHA-256", "SHA-512"};
        String[] AlgoVerifHash = {"Fonction de Hachage", "MD5", "SHA1", "SHA-256", "SHA-512", "HmacMD5", "HmacSHA1", "HmacSHA256", "HmacSHA512"};
        String[] algo = {"Type de Clé", "AES", "DES"};
        String selectItem = (String) hachType.getSelectedItem();
        if (selectItem.equals("Message Authentication Code (Mac)")) {
            typeKey.setEnabled(true);
            typeKey.setModel(new javax.swing.DefaultComboBoxModel<>(algo));
            hachFonction.setModel(new javax.swing.DefaultComboBoxModel<>(macAlgoDigest));
            headerIndicator.setText("Un Mac permet de générer un digest d'un texte en utilisant une fonction de hachage et une clé");
            hachSave.setText("Hacher et Enregistrer");
            importHach.setEnabled(false);
            pathStoreHach.setText("");
            keyName.setText("");
            fileName.setText("");
            hashName.setText("");
        } else if (selectItem.equals("Message Digest (MD)")) {
            typeKey.setEnabled(false);
            hachFonction.setModel(new javax.swing.DefaultComboBoxModel<>(mdAlgoDigest));
            headerIndicator.setText("Cette méthode (Message Digest) permet de Hacher un fichier,text,... avec une fonction de hachage");
            hachSave.setText("Hacher et Enregistrer");
            importHach.setEnabled(false);
            pathStoreHach.setText("");
            keyName.setText("");
            fileName.setText("");
            hashName.setText("");

        } else if (selectItem.equals("Vérification d'un hash")) {
            hachFonction.setModel(new javax.swing.DefaultComboBoxModel<>(AlgoVerifHash));
            headerIndicator.setText("La vérification d'un hash permet de vérifier l'intégrité du fichier hashé");
            hachSave.setText("Vérification");
            importHach.setEnabled(true);
            pathStoreHach.setText("");
            keyName.setText("");
            fileName.setText("");
            hashName.setText("");
        } else {
            typeKey.setEnabled(false);
            hachFonction.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"Fonction de Hachage"}));
            headerIndicator.setText("Choisir votre type de hachage");
            pathStoreHach.setText("");
            keyName.setText("");
            importHach.setEnabled(false);
            fileName.setText("");
            hashName.setText("");
        }
    }//GEN-LAST:event_hachTypeActionPerformed

    private void hachFonctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hachFonctionActionPerformed
        // TODO add your handling code here:
        verif = (String) hachFonction.getSelectedItem();
        if (verif.startsWith("Hmac")) {
            typeKey.setEnabled(true);
        } else if (verif.startsWith("SHA") || verif.equals("MD5")) {
            typeKey.setEnabled(false);
        } else {
            typeKey.setEnabled(false);
        }

    }//GEN-LAST:event_hachFonctionActionPerformed

    private void importFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importFileActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("importer le fichier à hacher");

        int returnValue = fileChooser.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileToHache = fileChooser.getSelectedFile();
            // Vous pouvez maintenant utiliser le "selectedFile" pour traiter le fichier importé, par exemple le lire ou le manipuler.
            fileName.setText(fileToHache.getName());
            // Vous pouvez également afficher le chemin du fichier dans un JTextField ou JLabel si vous le souhaitez.
        }
    }//GEN-LAST:event_importFileActionPerformed

    private void hachSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hachSaveActionPerformed
        // TODO add your handling code here:
        if (hachSave.getText().equals("Hacher et Enregistrer")) {
            String selectItem = (String) hachType.getSelectedItem();

            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Enregistrer le fichier haché");
            int returnValue = fileChooser.showSaveDialog(this);

            if (returnValue == JFileChooser.APPROVE_OPTION) {
                try {
                    File fileToSave = fileChooser.getSelectedFile();
                    if (selectItem.equals("Message Digest (MD)")) {
                        HachInput.getAndSaveMD(fileToHache.getAbsolutePath(), (String) hachFonction.getSelectedItem(), fileToSave.getAbsolutePath());

                        pathStoreHach.setText("Fichier haché et enregistré vers: " + fileToSave.getAbsolutePath());
                        fileName.setText("");
                        keyName.setText("");

                        Frame frame = new JFrame("Informations");
                        JOptionPane.showMessageDialog(frame,
                                "Hachage effectué avec succés",
                                "Information",
                                JOptionPane.INFORMATION_MESSAGE);
                    } else if (selectItem.equals("Message Authentication Code (Mac)")) {
                        HachInput.getAndSaveMac(fileToHache.getAbsolutePath(),
                                (String) hachFonction.getSelectedItem(),
                                cle.getAbsolutePath(),
                                (String) typeKey.getSelectedItem(), fileToSave.getAbsolutePath());
                        pathStoreHach.setText("Fichier haché et enregistré vers: " + fileToSave.getAbsolutePath());
                        fileName.setText("");
                        keyName.setText("");
                        JFrame frame = new JFrame("Exemple de boîte de dialogue");
                        JOptionPane.showMessageDialog(frame,
                                "Hachage effectué avec succés",
                                "Information",
                                JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        System.out.println("Veuillez vérifier l'algorithme et réessayer.");
                        JFrame frame = new JFrame("Exemple de boîte de dialogue");
                        JOptionPane.showMessageDialog(frame,
                                "Veuillez vérifier le type de hachage et l'agorithme puis réessayer",
                                "Message d'erreur",
                                JOptionPane.ERROR_MESSAGE);

                    }

                } catch (Exception ex) {
                    JFrame frame = new JFrame("Erreur");
                    JOptionPane.showMessageDialog(frame,
                            "Veuillez vérifier les paramètre puis réessayer",
                            "Message d'erreur",
                            JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }
            }
        } else {
            boolean b = false;
            if (verif.startsWith("Hmac")) {

                try {
                    b = HachInput.getHashMac(fileToHache.getAbsolutePath(),
                            fileHach.getAbsolutePath(),
                            verif, cle.getAbsolutePath(),
                            (String) typeKey.getSelectedItem());
                    if (b) {
                        JFrame frame = new JFrame("Informations");
                        JOptionPane.showMessageDialog(frame,
                                "Le fichier n'a subi aucune modification",
                                "Informations",
                                JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JFrame frame = new JFrame("Avertissement");
                        JOptionPane.showMessageDialog(frame,
                                "Le fichier n'est pas intègre",
                                "Avertissement",
                                JOptionPane.WARNING_MESSAGE);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Hachage.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else if (verif.startsWith("SHA") || verif.equals("MD5")) {
                try {
                    b = HachInput.getHashMd(fileToHache.getAbsolutePath(), fileHach.getAbsolutePath(), Hachage.verif);
                    if (b) {
                        JFrame frame = new JFrame("Informations");
                        JOptionPane.showMessageDialog(frame,
                                "Le fichier n'a subi aucune modification",
                                "Informations",
                                JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JFrame frame = new JFrame("Avertissement");
                        JOptionPane.showMessageDialog(frame,
                                "Le fichier n'est pas intègre",
                                "Avertissement",
                                JOptionPane.WARNING_MESSAGE);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(Hachage.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

            }

        }

    }//GEN-LAST:event_hachSaveActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        dispose();
        DiffieHellman dh = new DiffieHellman();
        dh.setVisible(true);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        dispose();
        new Accueil().setVisible(true);
    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        dispose();
        new ChiffrementEnLive().setVisible(true);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void importHachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importHachActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("importer le fichier à hacher");

        int returnValue = fileChooser.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            fileHach = fileChooser.getSelectedFile();
            // Vous pouvez maintenant utiliser le "selectedFile" pour traiter le fichier importé, par exemple le lire ou le manipuler.
            hashName.setText(fileHach.getName());
            // Vous pouvez également afficher le chemin du fichier dans un JTextField ou JLabel si vous le souhaitez.
        }
    }//GEN-LAST:event_importHachActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hachage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hachage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hachage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hachage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hachage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileName;
    private javax.swing.JComboBox<String> hachFonction;
    private javax.swing.JButton hachSave;
    private javax.swing.JComboBox<String> hachType;
    private javax.swing.JLabel hashName;
    private javax.swing.JLabel headerIndicator;
    private javax.swing.JLabel headerTitle;
    private javax.swing.JButton importFile;
    private javax.swing.JButton importHach;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel keyName;
    private javax.swing.JLabel pathStoreHach;
    private javax.swing.JComboBox<String> typeKey;
    private javax.swing.JLabel user;
    // End of variables declaration//GEN-END:variables
}
